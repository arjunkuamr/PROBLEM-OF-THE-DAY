class Solution {
public:
    string robotWithString(string s) {
        int n = s.size();
        vector<char> min_from(n + 1, '{');  // '{' is one more than 'z'
        
        // Preprocess to find minimum character from i to end
        for (int i = n - 1; i >= 0; --i) {
            min_from[i] = min(s[i], min_from[i + 1]);
        }

        string result;
        stack<char> st;

        for (int i = 0; i < n; ++i) {
            st.push(s[i]);

            // Pop characters from the stack if they are <= min_from[i+1]
            while (!st.empty() && st.top() <= min_from[i + 1]) {
                result += st.top();
                st.pop();
            }
        }

        // Append remaining characters from stack
        while (!st.empty()) {
            result += st.top();
            st.pop();
        }

        return result;
    }
};
